#!/usr/bin/python
from simpleutil.config import cfg
from simpleutil.log import log as logging

import logging as default_logging

from goperation.manager import common as manager_common
from goperation.manager.config import fernet_opts

command_opts = [
    cfg.BoolOpt('init',
               default=False,
               help='Init fernet key repository'),
    cfg.BoolOpt('byroot',
               default=True,
               help='Init fernet key by root'),
]

CONF = cfg.CONF
CONF.register_cli_opts(command_opts)

def main():

    group = cfg.OptGroup(name=manager_common.NAME, title='group of goperation %s' % manager_common.NAME)
    sgroup = cfg.OptGroup(name=manager_common.SERVER, title='group of goperation %s' % manager_common.SERVER)
    CONF(args=None,
         project=group.name,
         default_config_files=['/etc/goperation/goperation.conf',
                               '/etc/goperation/gcenter.conf'])
    logging.setup(CONF, group.name)
    default_logging.captureWarnings(True)

    CONF.register_group(group)
    CONF.register_group(sgroup)

    from simpleservice.wsgi.config import wsgi_server_options

    CONF.register_opts(fernet_opts, sgroup)
    CONF.register_opts(wsgi_server_options, sgroup)

    conf = CONF[manager_common.SERVER]

    from goperation.manager.utils import fernet


    if not conf.fernet_key_repository:
        raise RuntimeError('Config of key repository is None')

    max_active_keys = conf.fernet_expire_days + 2

    user = None if CONF.byroot else conf.wsgi_user
    group = None if CONF.byroot else conf.wsgi_group

    if CONF.init:
        fernet.create_key_directory(conf.fernet_key_repository,
                                    'root', 'root')
        fernet.initialize_key_repository(conf.fernet_key_repository, max_active_keys,
                                         user, group)
    else:
        fernet.rotate_keys(conf.fernet_key_repository, max_active_keys,
                           user, group)



if __name__ == '__main__':
    main()