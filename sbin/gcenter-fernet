#!/usr/bin/python
import logging as defalut_logging

from simpleutil.log import log as logging
from simpleutil.config import cfg


command_opts = [
    cfg.BoolOpt('init',
               default=False,
               help='Init fernet key repository'),
]

CONF = cfg.CONF
CONF.register_cli_opts(command_opts)

def main():

    from goperation.manager import common as manager_common
    group = cfg.OptGroup(name=manager_common.NAME, title='group of goperation %s' % manager_common.NAME)
    CONF(args=None,
         project=group.name,
         default_config_files=['/etc/goperation/goperation.conf',
                               '/etc/goperation/gcenter.conf'])
    logging.register_options(CONF)
    logging.setup(CONF, group.name)
    defalut_logging.captureWarnings(True)

    CONF.register_group(group)

    from goperation.manager.config import fernet_opts
    from simpleservice.wsgi.config import wsgi_server_options

    CONF.register_opts(fernet_opts, group)
    CONF.register_opts(wsgi_server_options, group)

    conf = CONF[manager_common.NAME]

    from goperation.manager.utils import fernet


    if not conf.fernet_key_repository:
        raise RuntimeError('Config of key repository is None')

    max_active_keys = conf.fernet_expire_days + 2

    if CONF.init:
        fernet.create_key_directory(conf.fernet_key_repository,
                                    conf.wsgi_user, conf.wsgi_group)
        fernet.initialize_key_repository(conf.fernet_key_repository, max_active_keys,
                                         conf.wsgi_user, conf.wsgi_group)
    else:
        fernet.rotate_keys(conf.fernet_key_repository, max_active_keys,
                           conf.wsgi_user, conf.wsgi_group)



if __name__ == '__main__':
    main()